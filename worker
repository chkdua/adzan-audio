export default {
  async fetch(request) {
    const url = new URL(request.url);
    const pathParts = url.pathname.split('/').filter(p => p); 
    const route = pathParts[0];
    if (request.method === 'OPTIONS') {
      return handleOptions(); // handle preflight
    }
    if (route === 'cari' && pathParts[1]) {
      return await handleCitySearch(pathParts[1]);
    } else if (route === 'jadwal') {
      return await handlePrayerSchedule(pathParts[1] || '1208');
    } else {
      return showUsage();
    }
  },
};

// âœ… Tambah handler untuk preflight request
function handleOptions() {
  return new Response(null, {
    status: 204,
    headers: corsHeaders()
  });
}

function corsHeaders() {
  return {
    'Access-Control-Allow-Origin': '*',
    'Access-Control-Allow-Methods': 'GET, OPTIONS',
    'Access-Control-Allow-Headers': 'Content-Type',
    'Content-Type': 'application/json; charset=utf-8'
  };
}

async function handleCitySearch(cityName) {
  const searchUrl = `https://api.myquran.com/v2/sholat/kota/cari/${encodeURIComponent(cityName)}`;
  try {
    const response = await fetch(searchUrl);
    const data = await response.json();
    if (!data.status || data.data.length === 0) {
      return new Response(JSON.stringify({ status: false, message: 'Kota tidak ditemukan.' }), {
        status: 404, headers: corsHeaders(),
      });
    }
    return new Response(JSON.stringify(data, null, 2), { headers: corsHeaders() });
  } catch {
    return new Response(JSON.stringify({ status: false, message: 'Gagal menghubungi API pencarian kota.' }), {
      status: 500, headers: corsHeaders(),
    });
  }
}

async function handlePrayerSchedule(cityId) {
  const today = new Date();
  const y = today.getFullYear();
  const m = String(today.getMonth() + 1).padStart(2, '0');
  const d = String(today.getDate()).padStart(2, '0');
  const prayerUrl = `https://api.myquran.com/v2/sholat/jadwal/${cityId}/${y}/${m}/${d}`;
  const hijriUrl = `https://api.myquran.com/v2/cal/hijr/?adj=-1`;

  try {
    const [prayerRes, hijriRes] = await Promise.all([fetch(prayerUrl), fetch(hijriUrl)]);
    const prayerData = await prayerRes.json();
    const hijriData = await hijriRes.json();

    if (!prayerData.status) {
      return new Response(JSON.stringify({ status: false, message: 'Jadwal tidak ditemukan.' }), {
        status: 404, headers: corsHeaders(),
      });
    }

    const data = prayerData.data;
    const schedule = data.jadwal;
    const hijri = hijriData?.data?.date?.[1] || schedule.hijriah;

    const json = {
      id: data.id,
      title: 'JADWAL SHOLAT',
      lokasi: data.lokasi,
      daerah: data.daerah,
      tanggal: schedule.tanggal,
      hijri,
      jadwal: {
        maghrib: schedule.maghrib,
        isya: schedule.isya,
        imsak: schedule.imsak,
        shubuh: schedule.subuh,
        fajar: schedule.terbit,
        dhuha: schedule.dhuha,
        dzuhur: schedule.dzuhur,
        ashar: schedule.ashar,
      },
      audio: {
        maghrib: 'https://cdn.jsdelivr.net/gh/chkdua/adzan-audio/maghrib.mp3',
        isya: 'https://cdn.jsdelivr.net/gh/chkdua/adzan-audio/isya.mp3',
        imsak: 'https://cdn.jsdelivr.net/gh/chkdua/adzan-audio/imsak.mp3',
        shubuh: 'https://cdn.jsdelivr.net/gh/chkdua/adzan-audio/shubuh.mp3',
        fajar: 'https://cdn.jsdelivr.net/gh/chkdua/adzan-audio/fajar.mp3',
        dhuha: 'https://cdn.jsdelivr.net/gh/chkdua/adzan-audio/dhuha.mp3',
        dzuhur: 'https://cdn.jsdelivr.net/gh/chkdua/adzan-audio/dzuhur.mp3',
        ashar: 'https://cdn.jsdelivr.net/gh/chkdua/adzan-audio/ashar.mp3',
      },
    };

    return new Response(JSON.stringify(json, null, 2), { headers: corsHeaders() });
  } catch {
    return new Response(JSON.stringify({ status: false, message: 'Gagal memproses permintaan jadwal.' }), {
      status: 500, headers: corsHeaders(),
    });
  }
}

function showUsage() {
  return new Response(JSON.stringify({
    message: "Selamat datang di API Jadwal Sholat",
    endpoints: {
      search_city: "/cari/{nama_kota}",
      prayer_schedule: "/jadwal/{id_kota}",
    }
  }, null, 2), { headers: corsHeaders() });
}
