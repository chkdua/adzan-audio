export default {
  async fetch(request) {
    const url = new URL(request.url);
    const pathParts = url.pathname.split('/').filter(p => p); 
    const route = pathParts[0];
    if (route === 'cari' && pathParts[1]) {
      const cityName = pathParts[1];
      return await handleCitySearch(cityName);
    }
    else if (route === 'jadwal') {
      const cityId = pathParts[1] || '1208';
      return await handlePrayerSchedule(cityId);
    } 
    else {
      return showUsage();
    }
  },
};
async function handleCitySearch(cityName) {
  const searchUrl = `https://api.myquran.com/v2/sholat/kota/cari/${encodeURIComponent(cityName)}`;
  try {
    const response = await fetch(searchUrl);
    const data = await response.json();
    if (!data.status || data.data.length === 0) {
        return new Response(JSON.stringify({ status: false, message: 'Kota tidak ditemukan.' }), {
            status: 404, headers: { 'Content-Type': 'application/json; charset=utf-8' },
        });
    }
    return new Response(JSON.stringify(data, null, 2), {
      headers: { 'Content-Type': 'application/json; charset=utf-8' },
    });
  } catch (error) {
    return new Response(JSON.stringify({ status: false, message: 'Gagal menghubungi API pencarian kota.' }), {
      status: 500, headers: { 'Content-Type': 'application/json; charset=utf-8' },
    });
  }
}
async function handlePrayerSchedule(cityId) {
  const today = new Date();
  const year = today.getFullYear();
  const month = String(today.getMonth() + 1).padStart(2, '0');
  const day = String(today.getDate()).padStart(2, '0');
  const prayerTimesAPI = `https://api.myquran.com/v2/sholat/jadwal/${cityId}/${year}/${month}/${day}`;
  const hijriIndoAPI = `https://api.myquran.com/v2/cal/hijr/?adj=-1`;
  try {
    const [prayerResponse, hijriIdResponse] = await Promise.all([
      fetch(prayerTimesAPI),
      fetch(hijriIndoAPI)
    ]);
    const prayerData = await prayerResponse.json();
    const hijriIdApiData = await hijriIdResponse.json();
    if (!prayerData.status) {
      return new Response(JSON.stringify({ status: false, message: 'Jadwal untuk ID kota tersebut tidak ditemukan.' }, null, 2), {
        status: 404, headers: { 'Content-Type': 'application/json; charset=utf-8' },
      });
    }
    const data = prayerData.data;
    const scheduleData = data.jadwal;
    let hijriId = scheduleData.hijriah;
    if (hijriIdApiData.status && hijriIdApiData.data?.date?.length > 1) {
        hijriId = hijriIdApiData.data.date[1];
    }
    const jsonResponse = {
      title: 'JADWAL SHOLAT',
      id: data.id,
      lokasi: data.lokasi,
      daerah: data.daerah,
      tanggal: scheduleData.tanggal,
      hijri: hijriId,
      jadwal: {
        maghrib: scheduleData.maghrib,
        isya: scheduleData.isya,
        imsak: scheduleData.imsak,
        shubuh: scheduleData.subuh,
        fajar: scheduleData.terbit,
        dhuha: scheduleData.dhuha,
        dzuhur: scheduleData.dzuhur,
        ashar: scheduleData.ashar,
      },
      audio: {
        maghrib: 'https://cdn.jsdelivr.net/gh/chkdua/adzan-audio/maghrib.mp3',
        isya: 'https://cdn.jsdelivr.net/gh/chkdua/adzan-audio/isya.mp3',
        imsak: 'https://cdn.jsdelivr.net/gh/chkdua/adzan-audio/imsak.mp3',
        shubuh: 'https://cdn.jsdelivr.net/gh/chkdua/adzan-audio/shubuh.mp3',
        fajar: 'https://cdn.jsdelivr.net/gh/chkdua/adzan-audio/fajar.mp3',
        dhuha: 'https://cdn.jsdelivr.net/gh/chkdua/adzan-audio/dhuha.mp3',
        dzuhur: 'https://cdn.jsdelivr.net/gh/chkdua/adzan-audio/dzuhur.mp3',
        ashar: 'https://cdn.jsdelivr.net/gh/chkdua/adzan-audio/ashar.mp3',
      },
    };
    return new Response(JSON.stringify(jsonResponse, null, 2), {
      headers: { 'Content-Type': 'application/json; charset=utf-8' },
    });
  } catch (error) {
    console.error('Error in handlePrayerSchedule:', error);
    return new Response(JSON.stringify({ status: false, message: 'Gagal memproses permintaan jadwal.' }), {
      status: 500, headers: { 'Content-Type': 'application/json; charset=utf-8' },
    });
  }
}
function showUsage() {
  const usageData = {
    message: "Selamat datang di API Jadwal Sholat",
    endpoints: {
      search_city: {
        description: "Mencari ID kota berdasarkan nama.",
        format: "/cari/{nama_kota}",
        example: "/cari/jakarta"
      },
      prayer_schedule: {
        description: "Mendapatkan jadwal sholat berdasarkan ID kota.",
        format: "/jadwal/{id_kota}",
        example: "/jadwal/1208",
        default: "Jika ID kota tidak disediakan, akan menggunakan ID default untuk Jakarta (1208)."
      }
    }
  };
  return new Response(JSON.stringify(usageData, null, 2), {
    headers: { 'Content-Type': 'application/json; charset=utf-8' },
  });
}
